@model dynamic

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Rental</h2>

<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" required name="customer" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            let vm = {
                movieIds: []
            };

            const customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace("name"),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: "/api/customers?query=%QUERY",
                    wildcard: "%QUERY"
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true
            }, {
                limit: 50,
                name: "customers",
                display: "name",
                source: customers
            }).on("typeahead:select", (e, customer) => {
                vm.customerId = customer.id;
            });

            const movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace("name"),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: "/api/movies?query=%QUERY",
                    wildcard: "%QUERY"
                }
            });

            $('#movie').typeahead({
                minLength: 3,
                highlight: true
            }, {
                limit: 50,
                name: "movies",
                display: "name",
                source: movies
            }).on("typeahead:select", (e, movie) => {
                $('#movies').append("<li class='list-group-item'>" + movie.name + "</li>");
                $('#movie').typeahead("val", "");
                vm.movieIds.push(movie.id);
            });

            $.validator.addMethod("validCustomer", () => vm.customerId && vm.customerId !== 0, "Please select a valid customer");
            $.validator.addMethod("movieSelected", () => vm.movieIds.length > 0, "Please select at least one movie");

            const validator = $("#newRental").validate({
                rules: {
                    customer: { validCustomer: true },
                    movie: { movieSelected: true }
                },

                submitHandler: () => {
                    $.ajax({
                        url: "/api/rentals",
                        method: "POST",
                        data: vm
                    })
                        .done(() => {
                            toastr.success("Movies rented");

                            $("#customer").typeahead("val", "");
                            $("#movies").empty();

                            vm.movieIds = { movieIds: [] };
                            validator.resetForm();
                        })
                        .fail(() => {
                            toastr.error("Rental failed");
                        });

                    return false;
                }
            });
        });
    </script>
}